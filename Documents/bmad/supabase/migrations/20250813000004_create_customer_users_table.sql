-- Create customer_users table for managing email addresses per customer/contract
-- This allows multiple email addresses to be associated with one customer/contract

create table public.customer_users (
  id bigint generated by default as identity primary key,
  customer_id text not null references public.customers(id) on delete cascade,
  email text not null unique,
  full_name text,
  is_primary boolean default false,
  is_active boolean default true,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Add RLS policies
alter table public.customer_users enable row level security;

-- Policy: Users can only see their own customer_users records
create policy "Users can view own customer users" on public.customer_users
  for select using (
    customer_id in (
      select customer_id from public.customer_users 
      where email = auth.jwt() ->> 'email'
    )
  );

-- Policy: Service role can do everything (for admin operations)
create policy "Service role can manage all customer users" on public.customer_users
  for all using (auth.role() = 'service_role');

-- Add indexes for performance
create index customer_users_customer_id_idx on public.customer_users(customer_id);
create index customer_users_email_idx on public.customer_users(email);
create index customer_users_is_active_idx on public.customer_users(is_active);

-- Add trigger for updated_at
create trigger handle_updated_at before update on public.customer_users
  for each row execute procedure moddatetime (updated_at);

-- Add constraint: Only one primary user per customer
create unique index customer_users_primary_unique_idx 
  on public.customer_users(customer_id) 
  where is_primary = true and is_active = true;

-- Insert comment
comment on table public.customer_users is 'Maps email addresses to customers - allows multiple users per customer/contract';
comment on column public.customer_users.customer_id is 'References customers.id - the contract/customer this email belongs to';
comment on column public.customer_users.email is 'User email address for authentication';
comment on column public.customer_users.is_primary is 'Primary contact for this customer (only one allowed per customer)';
comment on column public.customer_users.is_active is 'Whether this user can still login';